/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package edu.weather.servicebuilder.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the WeatherForecast service. Represents a row in the &quot;Weather_WeatherForecast&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link edu.weather.servicebuilder.model.impl.WeatherForecastModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link edu.weather.servicebuilder.model.impl.WeatherForecastImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see WeatherForecast
 * @see edu.weather.servicebuilder.model.impl.WeatherForecastImpl
 * @see edu.weather.servicebuilder.model.impl.WeatherForecastModelImpl
 * @generated
 */
@ProviderType
public interface WeatherForecastModel extends BaseModel<WeatherForecast> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a weather forecast model instance should use the {@link WeatherForecast} interface instead.
	 */

	/**
	 * Returns the primary key of this weather forecast.
	 *
	 * @return the primary key of this weather forecast
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this weather forecast.
	 *
	 * @param primaryKey the primary key of this weather forecast
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the weather forecast ID of this weather forecast.
	 *
	 * @return the weather forecast ID of this weather forecast
	 */
	public long getWeatherForecastId();

	/**
	 * Sets the weather forecast ID of this weather forecast.
	 *
	 * @param weatherForecastId the weather forecast ID of this weather forecast
	 */
	public void setWeatherForecastId(long weatherForecastId);

	/**
	 * Returns the city name of this weather forecast.
	 *
	 * @return the city name of this weather forecast
	 */
	@AutoEscape
	public String getCityName();

	/**
	 * Sets the city name of this weather forecast.
	 *
	 * @param cityName the city name of this weather forecast
	 */
	public void setCityName(String cityName);

	/**
	 * Returns the resource name of this weather forecast.
	 *
	 * @return the resource name of this weather forecast
	 */
	@AutoEscape
	public String getResourceName();

	/**
	 * Sets the resource name of this weather forecast.
	 *
	 * @param resourceName the resource name of this weather forecast
	 */
	public void setResourceName(String resourceName);

	/**
	 * Returns the forecast date of this weather forecast.
	 *
	 * @return the forecast date of this weather forecast
	 */
	public Date getForecastDate();

	/**
	 * Sets the forecast date of this weather forecast.
	 *
	 * @param forecastDate the forecast date of this weather forecast
	 */
	public void setForecastDate(Date forecastDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		edu.weather.servicebuilder.model.WeatherForecast weatherForecast);

	@Override
	public int hashCode();

	@Override
	public CacheModel<edu.weather.servicebuilder.model.WeatherForecast> toCacheModel();

	@Override
	public edu.weather.servicebuilder.model.WeatherForecast toEscapedModel();

	@Override
	public edu.weather.servicebuilder.model.WeatherForecast toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}